// ==========================================
// Mixins
// ==========================================

// pass content to mixins for later use
@mixin skewed {
  position: relative;
  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 50px;
    position: absolute;
    transform: skewY(-2deg);
    @content;
  }
}

// center elements with variable width
@mixin center($w) {
  width: $w;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

// rounded images with border
@mixin roundy($dim, $border: null) {
  width: $dim;
  height: $dim;
  border-radius: 50%;
  border: $border;
}

// flex container
@mixin flexy(
  $disp: flex,
  $dir: null,
  $wrap: null,
  $just: null ) {
  display: $disp;
  flex-direction: $dir;
  flex-wrap: $wrap;
  justify-content: $just;
}


//Media queries
// get small value from maps and compare to see
// which media query to apply
@mixin med-qur($break) {
$value: map-get($breakpoints, $break);
$s: map-get($breakpoints, 's');

  @if $value < $s {
    @media (max-width: $value) {
      @content;
    }
  }
  @else {
    @media (min-width: $value) {
      @content;
    }
  }
}
